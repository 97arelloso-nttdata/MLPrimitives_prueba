{
    "name": "the_primitive_name",
    "author": "Author Name <and@author.email>",
    "documentation": "http://link.to/the/primitive/docs",
    "description": "A human readable description.",
    "classifiers": {
        "type": "estimator",
        "subtype": "regression"
    },
    "modalities": ["image", "text", "graph"],
    "primitive": "full.python.path.to.AClass_or_function",
    "fit": {
        "method": "fit",
        "args": [
            "X": {
                "description": "each input can be described",
                "type": "DataFrame"
            },
            "y": {
                "description": "each input can be described",
                "type": "Series"
            }
        ]
    },
    "produce": {
        "method": "predict",
        "args": [
            "X": {
                "description": "each input can be described",
                "type": "DataFrame"
            }
        ],
        "output": [
            {
                "descrtiption": "each output argument can be described",
                "name": "X",
                "type": "DataFrame"
            }
        ]
    },
    "hyperparameters": {
        "required": {
            "descrtiption": "these are arguments that need to be provided by the user",
            "the key is the name": "and the value is a description, which ideally specifies the expected type",
            "for": "example:",
            "num_classes": "int - number of classes"
        },
        "fixed": {
            "descrtiption": "these are hyperparameters that cannot be tunned because they have a single value",
            "but": "that have default values provided by the primitive author, which makes them optional",
            "the key is the name": "and the value is a description, which ideally specifies the expected type",
            "for": "example:",
            "n_jobs": "int - number of threads to use. if -1, use one for each available cpu core."
        },
        "tunable": {
            "a_simple_range_hyperparameter": {
                "description": "hyperparameter documentation can be put here",
                "default": 1,
                "type": "int",
                "range": [1, 10]
            },
            "a_categorical_hyperparameter_of_type_int": {
                "description": "Note that it has the filed `values` instead of `range`",
                "default": 1,
                "type": "int",
                "values": [1, 3, 7, 10]
            },
            "a_categorical_hyperparameter_of_type_str": {
                "default": "a",
                "type": "str",
                "values": ["a", "b", "c"]
            },
            "a_multi_type_hyperprameter": {
                "description": "this is a hyperparameter that allows more than one type",
                "type": "multitype",
                "default": "auto",
                "types": {
                    "int": {
                        "description": "documentation can also be included here",
                        "range": [1, 10]
                    },
                    "string": {
                        "values": ["some", "string", "values"]
                    }
                }
            },
            "conditional_hyperparameter": {
                "description": "this is a hyperparameter whose valid values depend on the value of another hyperpameter",
                "type": "conditional",
                "condition": "the_name_of_the_other_hyperparameter",
                "values": {
                    "a": {
                        "description": "this hyperparameter definition will be used if the value of the other hyperparameter is `a`",
                        "type": "int",
                        "default": 0,
                        "range": [0, 10]
                    },
                    "*": {
                        "description": "this will be used only if the value does not match any other definition",
                        "type": "float",
                        "default": 0.0,
                        "range": [0.0, 1.0]
                    }
                }
            }
        }
    }
}
